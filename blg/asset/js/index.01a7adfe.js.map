{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/App.vue?cc28","webpack:///./examples/App.vue?0739","webpack:///examples/App.vue","webpack:///./examples/App.vue?853c","webpack:///./examples/App.vue?82c0","webpack:///./packages/cropblg.vue?079b","webpack:///packages/cropblg.vue","webpack:///./packages/cropblg.vue?dc1f","webpack:///./packages/cropblg.vue","webpack:///./packages/index.js","webpack:///./examples/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","index","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_4b37804a_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","on","click","getImageData","_v","$event","crop","changeImage","directives","rawName","expression","type","placeholder","domProps","input","target","composing","textWatermark","color","class","blue","shape","staticStyle","width","height","background-color","position","option","imageWatermark","imgWatermark","angle","model","callback","$$v","slot","src","text-align","imageData","alt","_e","staticRenderFns","Appvue_type_script_lang_js_","cropAction","methods","uploadImg","e","files","_getImageData","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getImage","sent","stop","arguments","examples_Appvue_type_script_lang_js_","component","componentNormalizer","App","cropblgvue_type_template_id_ff1d5020_render","ref","overflow","touchstart","handleStart","touchmove","handleMove","display","justify-content","align-items","flex-wrap","inputHandle","stopPropagation","_t","accept","change","cropblgvue_type_template_id_ff1d5020_staticRenderFns","cropblgvue_type_script_lang_js_","props","noImage","ctx","options","pixelRatio","scale","canvas","image","points","lines","cropper","corePoint","startPoint","touchBar","nookSide","rotateAngle","watch","draw","animation","img","clientW","clientH","_this$options","currentW","currentH","k","minNum","element","x","y","clientWidth","clientHeight","maxRadius","Math","min","arc","_this$options2","clearRect","fillBackground","fillImage","averageColor","getImageColor","fillArcCropper","updatePoint","fillRectCropper","drawTouchBar","alpha","h1","h2","lineWidth","fillStyle","fillRect","strokeStyle","beginPath","PI","stroke","x1","sin","y1","cos","x2","y2","x0","y0","moveTo","lineTo","fill","canvasRotate","cWidth","cHeight","forecastX","forecastY","diffX","diffY","lineHeight","halfLineHeight","strokeRect","forEach","save","translate","rotate","restore","handleArcMove","_ref","limit","getDistance","pageX","pageY","_this$options3","side","ceil","getNewCropper","touchX","touchY","cropperWidth","cropperHeight","cropperX","cropperY","handlePointMove","_ref2","newCropper","_this$getNewCropper","renderCropper","handleLineMove","_ref3","_this$getNewCropper2","objectSpread","handleImageMove","_ref4","offsetX","offsetY","getCoordinateByEvent","rect","getBoundingClientRect","touch","touches","coordinate","clientX","left","clientY","top","_this$options4","preventDefault","startTouches","getPointByCoordinate","abs","checkRegion","checkArc","isPointInPath","_ref5","_this","some","point","line","p1","p2","sqrt","max","_this2","undefined","mimeType","quality","types","Base64","promise_default","a","resolve","toDataURL","Blob","toBlob","blob","w","h","document","createElement","cCtx","getContext","radius","clip","reject","_this2$position","slicedToArray","_this2$position$","_this2$position$2","_this2$position$3","size","_this2$position$4","watermarkImg","Image","getFileSrc","crossOrigin","onload","imgX","parse_int_default","imgY","font","text","measureText","textX","textY","halfHeight","halfWidth","drawImage","fillText","imgAddress","createImage","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","toString","URL","createObjectURL","imgfile","_this3","getElementById","g","b","num","row","col","round","concat","mounted","mountNode","$refs","canvasDom","style","appendChild","defaultImgUrl","$slots","$emit","packages_cropblgvue_type_script_lang_js_","cropblg_component","cropblg","install","Vue","installed","packages_0","packages_install","vue_runtime_esm","render","$mount"],"mappings":"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","file":"asset/js/index.01a7adfe.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('p',{staticClass:\"operation\"},[_c('button',{staticClass:\"blue\",on:{\"click\":_vm.getImageData}},[_vm._v(\"点我截图\")]),_c('button',{staticClass:\"blue\",on:{\"click\":function($event){return _vm.crop.changeImage()}}},[_vm._v(\"点我换图\")])]),_c('p',{staticClass:\"watermark\"},[_vm._v(\"输入水印文字：\\n      \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.textWatermark),expression:\"textWatermark\"}],attrs:{\"type\":\"text\",\"placeholder\":\"可以输入水印\"},domProps:{\"value\":(_vm.textWatermark)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.textWatermark=$event.target.value}}})]),_c('p',{staticClass:\"watermark\"},[_vm._v(\"输入水印颜色：\\n      \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.color),expression:\"color\"}],attrs:{\"type\":\"text\",\"placeholder\":\"可以输入水印\"},domProps:{\"value\":(_vm.color)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.color=$event.target.value}}})]),_c('p',{staticClass:\"operation\"},[_c('button',{class:{blue: _vm.shape == 'rect'},on:{\"click\":function($event){_vm.shape='rect'}}},[_vm._v(\"矩形截图\")]),_c('button',{class:{blue: _vm.shape == 'arc'},on:{\"click\":function($event){_vm.shape='arc'}}},[_vm._v(\"圆形换图\")])]),_c('crop',{staticStyle:{\"width\":\"100%\",\"height\":\"560px\",\"background-color\":\"#f1f3f5\"},attrs:{\"position\":_vm.option,\"textWatermark\":_vm.textWatermark,\"imageWatermark\":_vm.imgWatermark,\"angle\":15,\"color\":_vm.color,\"shape\":_vm.shape},model:{value:(_vm.crop),callback:function ($$v) {_vm.crop=$$v},expression:\"crop\"}},[_c('template',{slot:\"placeholder\"},[_c('img',{staticStyle:{\"width\":\"20%\"},attrs:{\"src\":\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1057851374,249752393&fm=26&gp=0.jpg\"}})])],2),(_vm.cropAction)?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('p',[_vm._v(\"长按保存图片\")]),(_vm.cropAction)?_c('img',{staticStyle:{\"width\":\"70%\"},attrs:{\"src\":_vm.imageData,\"alt\":\"\"}}):_vm._e()]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n  <p class=\"operation\"><button class=\"blue\" @click=\"getImageData\">点我截图</button>\r\n  <button class=\"blue\" @click=\"crop.changeImage()\">点我换图</button></p>\r\n  <p class=\"watermark\">输入水印文字：\r\n      <input type=\"text\" placeholder=\"可以输入水印\" v-model=\"textWatermark\" >      \r\n   </p>\r\n    <p class=\"watermark\">输入水印颜色：\r\n      <input type=\"text\" placeholder=\"可以输入水印\" v-model=\"color\" >      \r\n   </p>\r\n    <p class=\"operation\">\r\n      <button @click=\"shape='rect'\" :class=\"{blue: shape == 'rect'}\" >矩形截图</button>\r\n      <button @click=\"shape='arc'\"  :class=\"{blue: shape == 'arc'}\">圆形换图</button>\r\n    </p>\r\n    <crop\r\n      style=\"width:100%;height:560px;background-color: #f1f3f5;\"\r\n      v-model=\"crop\"\r\n      :position=\"option\"\r\n      :textWatermark = \"textWatermark\"\r\n      :imageWatermark=\"imgWatermark\"\r\n      :angle=15\r\n      :color=color\r\n      :shape=shape\r\n    >\r\n          <!-- defaultImgUrl = \"http://img.zcool.cn/community/01bc0f59c9a9b0a8012053f85f066c.jpg\" -->\r\n    <!-- :imageWatermark = \"require('./assets/logo.png')\" -->\r\n      <template slot=\"placeholder\">\r\n        <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1057851374,249752393&fm=26&gp=0.jpg\" style=\"width:20%\" />\r\n      </template>\r\n<!-- \r\n      <template slot=\"defaultImgUrl\"> \r\n        <img  src=\"./assets/u=1388650196,3398819234&fm=26&gp=0.jpg\" />\r\n      </template> -->\r\n\r\n     </crop>\r\n    <div style=\"text-align:center\" v-if=\"cropAction\">\r\n          <p>长按保存图片</p>\r\n          <img v-if=\"cropAction\" :src=\"imageData\" alt=\"\" style=\"width:70%\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'app',\r\n  data() {\r\n    return {\r\n        option: ['70%', '70%', 0.2, 12],\r\n        color:'#f60',\r\n        imgWatermark: '',\r\n        textWatermark: '板蓝根出品，必属精品',\r\n        crop:{},\r\n        cropAction: false,\r\n        imageData: null,\r\n        shape: 'arc'\r\n    }\r\n  },\r\n  methods: {\r\n    uploadImg(e) {\r\n      this.imgWatermark = e.target.files[0]\r\n    },\r\n    async getImageData() {\r\n         const imageData = await this.crop.getImage('Base64', 'image/png', 2)\r\n         this.imageData = imageData\r\n         this.cropAction = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  body,html {\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n  \r\n  }\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  #app {\r\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    width: 100%;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none; /* Konqueror */\r\n    -moz-user-select: none; /* Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently not supported by any browser */\r\n  }\r\n  .operation .blue {\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    background-color: #1890ff;\r\n    border-color: #1890ff;\r\n    border-style: solid;\r\n    \r\n  }\r\n  .operation button {\r\n    position: relative;\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n    background-image: none;\r\n    border: 1px solid transparent;\r\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.015);\r\n    box-shadow: 0 2px 0 rgba(0,0,0,0.015);\r\n    cursor: pointer;\r\n    -webkit-transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n    transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    -ms-touch-action: manipulation;\r\n    touch-action: manipulation;\r\n    height: 32px;\r\n    padding: 0 15px;\r\n    font-size: 14px;\r\n    color: rgba(0,0,0,0.65);\r\n    background-color: #fff;\r\n    border-color: #1890ff;\r\n    border-style: dashed;\r\n    text-shadow: 0 -1px 0 rgba(0,0,0,0.12);\r\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.045);\r\n    box-shadow: 0 2px 0 rgba(0,0,0,0.045);\r\n    line-height: 1.499;\r\n    margin: 20px;\r\n  }\r\n  .watermark input {\r\n    /* -webkit-appearance: none; */\r\n    /* width：180px; */\r\n    position: relative;\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border-radius: 4px;\r\n    border: 1px solid #dcdfe6;\r\n    box-sizing: border-box;\r\n    color: #606266;\r\n    display: inline-block;\r\n    font-size: inherit;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    outline: none;\r\n    padding: 0 15px;\r\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    margin-bottom: 20px;\r\n  }\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4b37804a&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"mountNode\",staticClass:\"mount-node\",staticStyle:{\"overflow\":\"hidden\"},on:{\"touchstart\":function($event){return _vm.handleStart($event)},\"touchmove\":function($event){return _vm.handleMove($event)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.noImage),expression:\"noImage\"}],staticClass:\"no-image-file\",staticStyle:{\"height\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"flex-wrap\":\"wrap\"},on:{\"click\":_vm.inputHandle,\"touchstart\":function($event){$event.stopPropagation();return (function (){})($event)},\"touchmove\":function($event){$event.stopPropagation();return (function (){})($event)}}},[_vm._t(\"placeholder\",[_c('span',[_vm._v(\"暂时没有图片,请选择图像\")])]),_c('div',{staticStyle:{\"display\":\"none\"}},[_c('input',{attrs:{\"type\":\"file\",\"id\":\"file-input\",\"accept\":\"image/jpeg,image/x-icon,image/png\"},on:{\"change\":_vm.uploadImg}}),_vm._t(\"defaultImgUrl\")],2)],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div ref=\"mountNode\" \r\n        class=\"mount-node\" \r\n        @touchstart=\"handleStart($event)\"\r\n        @touchmove=\"handleMove($event)\"\r\n        style=\" overflow: hidden;\"\r\n   \r\n    >\r\n         <!-- style=\" overflow: hidden;\" -->\r\n    <!--  不能绑在wrap 上=== 这样子任何点击都会计算 -后期优化-->\r\n        <div v-show=\"noImage\" @click=\"inputHandle\" class=\"no-image-file\" style=\"height: 100%; display: flex;justify-content: center;align-items: center;flex-wrap: wrap;\"  @touchstart.stop=\"()=>{}\" @touchmove.stop=\"()=>{}\">\r\n            <!-- <span>暂时没有图片,请选择图像</span> -->\r\n            <slot name=\"placeholder\"><span>暂时没有图片,请选择图像</span></slot>\r\n            <div style=\"display:none\">\r\n                <input \r\n                    @change=\"uploadImg\"\r\n                    type=\"file\"\r\n                    id=\"file-input\"\r\n                    accept=\"image/jpeg,image/x-icon,image/png\"\r\n                >\r\n                <slot name=\"defaultImgUrl\"></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'crop',\r\n        props:['value', 'position', 'textWatermark', 'imageWatermark', 'defaultImgUrl', 'color', 'angle', 'shape'],\r\n        data() {\r\n            return {\r\n                // ready: false,\r\n                noImage: true,\r\n                ctx: null,\r\n                options: null,\r\n                pixelRatio: null,\r\n                scale:1,\r\n                canvas: null,\r\n                image: {},\r\n                points: [],\r\n                lines: [],\r\n                cropper: {},\r\n                corePoint: {},\r\n                startPoint: {},\r\n                touchBar: {},\r\n                nookSide: 30,\r\n                rotateAngle: 0\r\n            }\r\n        },\r\n        watch: {\r\n            shape() {\r\n                if (!this.noImage) {\r\n                    this.draw()\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            animation(img){\r\n                    const clientW = img.width,\r\n                    clientH = img.height,\r\n                    { width, height } = this.options\r\n                    let currentW = clientW,\r\n                        currentH = clientH,\r\n                        k = 1 // contain 时的缩放比\r\n                    // contain 图片\r\n                    if (clientW > width) {\r\n                        currentW = width\r\n                        k = currentW / clientW\r\n                        currentH = k * clientH\r\n                    }\r\n                    if (currentH > height) {\r\n                        currentH = height\r\n                        k = currentH / clientH\r\n                        currentW = k * clientW\r\n                    }\r\n                    // 针对小图片\r\n                    const minNum = 100\r\n                    if (clientW < minNum) {\r\n                        currentW = minNum\r\n                        k = currentW / clientW\r\n                        currentH = k * clientH\r\n                    }\r\n                    if (currentH < minNum) {\r\n                        currentH = minNum;\r\n                        k = currentH / clientH\r\n                        currentW = k * clientW\r\n                    }\r\n                    // 针对小图片\r\n                    this.image = {\r\n                        element: img,\r\n                        width: currentW,\r\n                        height: currentH,\r\n                        x: (width - currentW) / 2,\r\n                        y: (height - currentH) / 2,\r\n                        clientWidth: clientW,\r\n                        clientHeight: clientH\r\n                    }\r\n\r\n                    const corePoint = this.corePoint = {x: width / 2 ,y : height / 2} \r\n                    this.maxRadius = Math.min(width, height) / 2\r\n                    this.arc = {\r\n                        x: corePoint.x,\r\n                        y: corePoint.y,\r\n                        r: this.maxRadius  / 2\r\n                    }\r\n                    this.cropper = {\r\n                        x: (width - currentW / 2) / 2,\r\n                        y: (height - currentH / 2) / 2,\r\n                        width: currentW  / 2,\r\n                        height: currentH / 2\r\n                    }\r\n                    this.touchBar = {\r\n                        x: width - 60 - 14,\r\n                        y: 10,\r\n                        width: 60,\r\n                        height: 60\r\n                    }\r\n                    this.draw()\r\n            },\r\n            draw() {\r\n                const { width, height } = this.options\r\n                // 避免预览到背景\r\n                this.ctx.clearRect(0, 0, width, height)\r\n                // console.time('fillBackground')  \r\n                this.fillBackground()\r\n                // console.timeEnd('fillBackground')\r\n                // console.time('fillImage')\r\n                this.fillImage()\r\n                // console.timeEnd('fillImage')\r\n                if (!this.averageColor) {\r\n                        this.averageColor = this.getImageColor(this.ctx.getImageData(this.corePoint.x - 25,  this.corePoint.y - 25, 50, 50).data)\r\n                }\r\n                if (this.shape === 'arc') {\r\n                    this.fillArcCropper()\r\n                } else {\r\n                    this.updatePoint()\r\n                    this.fillRectCropper()\r\n                }\r\n                //  console.time('drawTouchBar')\r\n                if (this.angle) {\r\n                    this.drawTouchBar()\r\n                }\r\n                // console.timeEnd('drawTouchBar')\r\n                // this.preview()\r\n            },\r\n            drawTouchBar() {\r\n                const ctx = this.ctx,\r\n                touchBar = this.touchBar,\r\n                color = this.color || this.averageColor,\r\n                x = touchBar.x + touchBar.width * 0.6,\r\n                y =  touchBar.y + touchBar.height * 0.64,\r\n                r = touchBar.width * 0.41,\r\n                alpha = 6,\r\n                h1 = touchBar.width * 0.1,\r\n                h2 =  touchBar.width * 0.18\r\n                ctx.lineWidth = 2\r\n                // ctx.fillStyle = '#000';\r\n                // ctx.fillRect(touchBar.x, touchBar.y, touchBar.width, touchBar.height)\r\n                ctx.fillStyle = color\r\n                ctx.fillRect(x - touchBar.width / 6, y - touchBar.height / 6, touchBar.width * 0.43, touchBar.height * 0.43)\r\n                ctx.strokeStyle = color\r\n                ctx.beginPath()\r\n                ctx.arc(x, y, r, Math.PI/180 * 180, -Math.PI/2 + alpha, false)\r\n                ctx.stroke()\r\n                if(alpha < 2*Math.PI) {\r\n                    const x1 = x + (r - h1) * Math.sin(alpha),\r\n                    y1 = y - (r - h1) * Math.cos(alpha),\r\n                    x2 = x + (r + h1) * Math.sin(alpha),\r\n                    y2 = y - (r + h1) * Math.cos(alpha),\r\n                    x0 = (x1 + x2) / 2 + h2 * Math.sin(alpha + Math.PI/2),\r\n                    y0 = (y1 + y2) / 2 - h2 * Math.cos(alpha + Math.PI/2)\r\n                    ctx.beginPath()\r\n                    ctx.moveTo(x0, y0)\r\n                    ctx.lineTo(x1, y1)\r\n                    ctx.lineTo(x2, y2)\r\n                    ctx.fill()\r\n                }\r\n            },\r\n            fillImage() {\r\n                const image = this.image;\r\n                const ctx = this.ctx\r\n                const rotateAngle = this.rotateAngle\r\n                this.canvasRotate('img', ctx, image.element, rotateAngle, image.x, image.y, image.width, image.height)\r\n                // ctx.drawImage(image.element, image.x, image.y, image.width, image.height)\r\n            },\r\n            updatePoint() {\r\n                // 点中点和线 不用 执行 \r\n                const c = this.cropper;\r\n                const nookSide =  this.nookSide,\r\n                cWidth = c.x + c.width,\r\n                cHeight = c.y + c.height,\r\n                forecastX = cWidth - nookSide,\r\n                forecastY = cHeight - nookSide\r\n                this.points = [\r\n                    {\r\n                        x: c.x,\r\n                        y: c.y,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: 0,\r\n                        diffY: 0\r\n                    },\r\n                    {\r\n                        x: forecastX ,\r\n                        y: c.y,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: nookSide,\r\n                        diffY: 0\r\n                    },\r\n                    {\r\n                        x: forecastX ,\r\n                        y: forecastY,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: nookSide,\r\n                        diffY: nookSide\r\n                    },\r\n                    {\r\n                        x: c.x,\r\n                        y: forecastY,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: 0,\r\n                        diffY: nookSide\r\n                    }\r\n                ]\r\n                // 寻找四根线\r\n                const lineHeight = nookSide / .7,\r\n                halfLineHeight = lineHeight / 2\r\n                this.lines = [\r\n                     {\r\n                        x: c.x,\r\n                        y: c.y - halfLineHeight,\r\n                        width: c.width,\r\n                        height: lineHeight\r\n                    },\r\n                    {\r\n                        x: cWidth - halfLineHeight,\r\n                        y: c.y,\r\n                        width: lineHeight,\r\n                        height: c.height\r\n                    },\r\n                    {\r\n                        x: c.x,\r\n                        y: cHeight - halfLineHeight,\r\n                        width: c.width,\r\n                        height: lineHeight\r\n                    },\r\n                    {\r\n                        x: c.x - halfLineHeight,\r\n                        y: c.y,\r\n                        width: lineHeight,\r\n                        height: c.height\r\n                    }\r\n                ]\r\n            },\r\n            fillRectCropper() {\r\n                const ctx = this.ctx,\r\n                cropper = this.cropper,\r\n                points = this.points,\r\n                color = this.color || this.averageColor\r\n                ctx.strokeStyle = color\r\n                ctx.lineWidth = 2\r\n                ctx.strokeRect(cropper.x, cropper.y, cropper.width, cropper.height)\r\n                ctx.fillStyle = color\r\n                const nookSide = this.nookSide / 8\r\n                points.forEach((element, index) => {\r\n                    ctx.save()\r\n                    ctx.translate(element.x + element.diffX, element.y + element.diffY)\r\n                    ctx.rotate(index * 90 * (Math.PI/180))\r\n                    ctx.fillRect(-nookSide, -nookSide, element.height, nookSide * 2)\r\n                    ctx.fillRect(-nookSide, -nookSide, nookSide * 2, element.width)\r\n                    // if(index % 2 === 0){\r\n                    //     ctx.fillRect(-nookSide, cropper.height / 2 - element.nookSide , element.nookSide / 4, element.nookSide * 2)\r\n                    // } else {\r\n                    //     ctx.fillRect(-nookSide, cropper.width / 2 - element.nookSide, element.nookSide / 4, element.nookSide * 2)\r\n                    // }\r\n                    ctx.restore()\r\n                });\r\n                // console.log(this.arc.r)\r\n                // 圆\r\n\r\n                \r\n            },\r\n            fillArcCropper() {\r\n                const ctx = this.ctx\r\n                ctx.beginPath()\r\n                ctx.strokeStyle = this.color || this.averageColor\r\n                ctx.lineWidth =  2 // this.nookSide / 0.7\r\n                ctx.arc(this.arc.x, this.arc.y, this.arc.r, 0, Math.PI * 2)\r\n                ctx.stroke();\r\n            },\r\n            handleArcMove({x, y}) {\r\n                this.arc.r = this.limit(this.getDistance({pageX: x, pageY: y}, {pageX: this.arc.x, pageY: this.arc.y}), this.nookSide * 2, this.maxRadius)\r\n                this.draw()\r\n            },\r\n           // 填充背景\r\n            fillBackground() {\r\n                // 多个变量可以用逗号 一次赋值\r\n                const { width, height } = this.options, \r\n                ctx = this.ctx,\r\n                side = 30 ,//width / 80,\r\n                x = Math.ceil(width / side),\r\n                y = Math.ceil(height / side)\r\n                // Math.ceil 向上取整\r\n                ctx.save()\r\n                ctx.fillStyle = '#ccc'\r\n                // y方向\r\n                for (let i = 0; i < y; i++) {//  铺满每一行\r\n                    for (let j = 0; j < x; j++) { // 一行的小方格\r\n                        if ((j + i) % 2 === 0) {\r\n                            ctx.fillRect(j * side, i * side, side, side)\r\n                        }\r\n                    }\r\n                }\r\n                //蒙层 \r\n                ctx.fillStyle = 'rgba(0, 0, 0, .1)'\r\n                ctx.fillRect(0, 0, width, height)\r\n                 //蒙层 \r\n                ctx.restore()\r\n            },\r\n            getNewCropper(touchX, touchY ,cropper) {\r\n               return {\r\n                    cropperWidth:(cropper.x + cropper.width) - touchX,\r\n                    cropperHeight: (cropper.y + cropper.height) - touchY,\r\n                    cropperX: touchX - cropper.x,\r\n                    cropperY: touchY - cropper.y\r\n               }\r\n            },\r\n            handlePointMove({ x, y }) {\r\n                const cropper = this.cropper,\r\n                newCropper = {},\r\n                { cropperWidth, cropperHeight, cropperX, cropperY } = this.getNewCropper(x, y, cropper)\r\n                switch (this.index) {\r\n                    case 0:\r\n                        newCropper.width =  cropperWidth\r\n                        newCropper.height = cropperHeight\r\n                        newCropper.x = x\r\n                        newCropper.y = y\r\n                        break;\r\n                    case 1:\r\n                    // x  不会动\r\n                        newCropper.width =  cropperX\r\n                        newCropper.height =  cropperHeight\r\n                        newCropper.y = y\r\n                        break;\r\n                    case 3:\r\n                    // y 不会动\r\n                        newCropper.width = cropperWidth\r\n                        newCropper.height = cropperY\r\n                        newCropper.x = x\r\n                        break;\r\n                    case 2:\r\n                        newCropper.width = cropperX\r\n                        newCropper.height = cropperY\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.renderCropper(newCropper)\r\n            },\r\n            handleLineMove ({ x, y }) {\r\n                const cropper = this.cropper,\r\n                newCropper = {},\r\n                { cropperWidth, cropperHeight, cropperX, cropperY } = this.getNewCropper(x, y, cropper)\r\n                switch (this.index) {\r\n                    case 3:\r\n                        newCropper.width = cropperWidth\r\n                        newCropper.x = x // 限制\r\n                        break;\r\n                    case 0:\r\n                        newCropper.height = cropperHeight\r\n                        newCropper.y = y // 限制\r\n                        break;\r\n                    case 1:\r\n                        newCropper.width = cropperX\r\n                        break;\r\n                    case 2:\r\n                    // y 不会动\r\n                        newCropper.height = cropperY\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.renderCropper(newCropper)\r\n            },\r\n            renderCropper(newCropper) {\r\n                 if (newCropper.width <= this.nookSide * 4 || newCropper.height <= this.nookSide * 4) {\r\n                    return\r\n                }\r\n                this.cropper = {...this.cropper,...newCropper}\r\n                this.draw()\r\n            },\r\n            handleImageMove ({ x, y }) {\r\n                const s = this.startPoint\r\n                this.image.x = x - s.offsetX\r\n                this.image.y = y - s.offsetY\r\n                this.draw()\r\n            },\r\n            // handleCropperMove({ x, y }) {\r\n            //     const { width, height } = this.options;\r\n            //     const s = this.startPoint;\r\n            //     const oX = s.offsetX;\r\n            //     const oY = s.offsetY;\r\n            //     const maxX = width - this.cropper.width;\r\n            //     const maxY = height - this.cropper.height;\r\n            //     let currentX = x - oX,\r\n            //     currentY = y - oY;\r\n            //     // 判断边界\r\n            //     this.cropper.x = this.limit(currentX, 0, maxX)\r\n            //     this.cropper.y = this.limit(currentY, 0, maxY)\r\n            //     this.draw()\r\n            // },\r\n            getCoordinateByEvent(e){\r\n                const rect = e.target.getBoundingClientRect(),\r\n                touch = e.touches[0],\r\n                coordinate = {\r\n                    x: touch.clientX - rect.left,\r\n                    y: touch.clientY - rect.top\r\n                },\r\n                { width, height } = this.options\r\n                // move 到边\r\n                if (coordinate.x <= 2 || coordinate.y <= 2 || coordinate.x >= width - 2 || coordinate.y >= height - 2) return\r\n                return coordinate\r\n            },\r\n            // https://blog.csdn.net/qq_42014697/article/details/80728463  两指缩放\r\n            handleStart(e) {\r\n                e.preventDefault()\r\n                if (e.touches.length > 1) {\r\n                    this.startTouches = e.touches\r\n                    this.startPoint.type = null\r\n                    return;\r\n                }\r\n                this.startPoint = this.getPointByCoordinate(this.getCoordinateByEvent(e))\r\n            },\r\n            handleMove (e) {\r\n                e.preventDefault()\r\n                const touches = e.touches\r\n                if (touches.length > 1) {\r\n                    const image = this.image\r\n                    let startTouches = this.startTouches\r\n                    let k; // 最终的缩放系数\r\n                    const scale = this.scale;\r\n                    // const offset = e.deltaY / 800;\r\n                    k = (this.getDistance(touches[0], touches[1]) / this.getDistance(startTouches[0], startTouches[1]))\r\n                    // k = k < 1 ? k / 10 : k * 10\r\n                    k = k < 1 ? 1 / (1 + k / 80) : 1 + Math.abs(k) / 160\r\n                    k = k * scale;\r\n                    this.scale = this.limit(k, 0.02, 4)\r\n                    const width = image.clientWidth * this.scale,\r\n                    height = image.clientHeight * this.scale\r\n                    this.image.x += (image.width - width) / 2\r\n                    this.image.y += (image.height - height) / 2\r\n                    this.image.width = width\r\n                    this.image.height = height\r\n                    this.draw()\r\n                    return\r\n                }\r\n                const type = this.startPoint.type\r\n                if (type && this.getCoordinateByEvent(e)) {\r\n                    this[type](this.getCoordinateByEvent(e))\r\n                }\r\n            },\r\n            checkRegion(x,y,target) {\r\n                return x > target.x &&\r\n                    x < target.x + target.width &&\r\n                    y > target.y &&\r\n                    y < target.y + target.height\r\n            },\r\n            checkArc(x, y) {\r\n                const ctx  = this.ctx\r\n                ctx.beginPath()\r\n                // ctx.strokeStyle = 'red'//'transparent'\r\n                ctx.lineWidth = this.nookSide / 0.7\r\n                ctx.arc(this.arc.x, this.arc.y, this.arc.r + ctx.lineWidth , 0, Math.PI * 2)\r\n                // ctx.stroke() \r\n                return (ctx.isPointInPath(x * this.pixelRatio, y * this.pixelRatio)\r\n                 && this.getDistance({pageX: x, pageY: y}, {pageX: this.arc.x, pageY: this.arc.y}) >  this.arc.r - ctx.lineWidth / 2)\r\n            },\r\n            getPointByCoordinate({x, y}) {\r\n                const image = this.image,\r\n                touchBar = this.touchBar\r\n                let t = {}\r\n                let index = 0\r\n                if (this.checkRegion(x,y,touchBar)) {\r\n                    this.rotateAngle =  (this.rotateAngle + this.angle ) % 360\r\n                    this.draw()\r\n                    return\r\n                }\r\n                // 圆移动\r\n                else if (this.shape === 'arc' && this.checkArc(x, y)) {\r\n                    t.type = 'handleArcMove'\r\n                }\r\n                // 四个角移动         \r\n                else if (this.shape !== 'arc' && this.points.some((point,i) => {\r\n                    index = i\r\n                    return this.checkRegion(x,y,point)\r\n                })\r\n                ) {\r\n                    t.type = 'handlePointMove'\r\n                    this.index = index\r\n                }\r\n                // 四根线移动\r\n                else if (this.shape !== 'arc' && this.lines.some((line,i) => {\r\n                    index = i\r\n                    return this.checkRegion(x,y,line)\r\n                }) \r\n                ) {\r\n                    t.type = 'handleLineMove'\r\n                    this.index = index\r\n                }\r\n                // else if (\r\n                // cropper &&\r\n                // x > cropper.x &&\r\n                // x < cropper.x + cropper.width &&\r\n                // y > cropper.y &&\r\n                // y < cropper.y + cropper.height\r\n                // ) {\r\n                // t.offsetX = x - cropper.x;\r\n                // t.offsetY = y - cropper.y;\r\n                // t.type = 'handleCropperMove'\r\n                // }\r\n                // 图片移动\r\n                else if (this.checkRegion(x,y,image)) {\r\n                    t.offsetX = x - image.x\r\n                    t.offsetY = y - image.y\r\n                    t.type = 'handleImageMove'\r\n                }\r\n                return t\r\n            },\r\n            getDistance(p1, p2) {\r\n                const x = p2.pageX - p1.pageX,\r\n                    y = p2.pageY - p1.pageY\r\n                return Math.sqrt((x * x) + (y * y))\r\n            },\r\n            limit(value, min, max) {\r\n                if (value < min) {\r\n                    return min\r\n                }\r\n                if (value > max) {\r\n                    return max\r\n                }\r\n                return value\r\n            },\r\n            getImage(type='Base64', mimeType='image/jpeg', quality=1) {\r\n                if (this.noImage) return\r\n                const image = this.image,\r\n                // cropper = this.cropper,\r\n                cropper = this.shape === 'arc' ? {\r\n                    x: this.arc.x - this.arc.r,\r\n                    y: this.arc.y - this.arc.r,\r\n                    width:  this.arc.r * 2 ,\r\n                    height:  this.arc.r * 2\r\n                } : this.cropper,\r\n                pixelRatio = this.pixelRatio,\r\n                types = {\r\n                    Base64(canvas, mimeType) {\r\n                        return new Promise((resolve) => {\r\n                            resolve(canvas.toDataURL(mimeType))\r\n                        })\r\n                    },\r\n                    Blob(canvas, mimeType){\r\n                        return new Promise((resolve) => {\r\n                            canvas.toBlob((blob)=> {\r\n                                resolve(blob)\r\n                            }, mimeType)\r\n                        })\r\n                    } \r\n                },\r\n                w = cropper.width * quality ,\r\n                h = cropper.height * quality \r\n                // 变量申请\r\n                if (!this.canvas) {\r\n                    this.canvas = document.createElement('canvas')\r\n                    this.cCtx = this.canvas.getContext('2d')\r\n                    // const { mountNode } = this.$refs\r\n                    // mountNode.appendChild(this.canvas)\r\n                }\r\n                const cCtx = this.cCtx\r\n                this.canvas.width = w * pixelRatio\r\n                this.canvas.height = h * pixelRatio\r\n                cCtx.scale(pixelRatio, pixelRatio)\r\n                cCtx.clearRect(0, 0, w, h)\r\n                const rotateAngle = this.rotateAngle\r\n                if (this.shape === 'arc') {\r\n                    const radius = cropper.width\r\n                    cCtx.beginPath()\r\n                    cCtx.lineWidth = 10\r\n                    cCtx.arc(radius, radius, radius, 0, Math.PI * 2, false)\r\n                    cCtx.clip()\r\n                }\r\n                this.canvasRotate('img', cCtx, image.element,\r\n                    rotateAngle,\r\n                    (image.x - cropper.x)  * quality,\r\n                    (image.y - cropper.y)  * quality,\r\n                    image.width* quality,\r\n                    image.height* quality\r\n                )\r\n                // -------------\r\n                // cCtx.drawImage(\r\n                //     image.element,\r\n                //     (image.x - cropper.x)  * quality , //  是负数\r\n                //     (image.y - cropper.y)  * quality, // 负数\r\n                //     image.width * quality ,\r\n                //     image.height * quality\r\n                // )\r\n                return new Promise((resolve, reject) => {\r\n                    if(!types[type]) {\r\n                        reject('type = Blob || Base64')\r\n                        return  \r\n                    }\r\n                    const [left = '50%', top = '50%', size = 1, angle = 0] = this.position\r\n                    // angle = this.angle || 0\r\n                    if (this.imageWatermark) {\r\n                        let watermarkImg = new Image()\r\n                        watermarkImg.src = this.getFileSrc(this.imageWatermark)\r\n                        watermarkImg.crossOrigin = 'anonymous'\r\n                        watermarkImg.onload = () => { // 等到图片加载进来之后\r\n                            const width = watermarkImg.width * size * quality,\r\n                            height = watermarkImg.height * size * quality,\r\n                            imgX  = ( w - width ) * parseInt(left) / 100 ,\r\n                            imgY =  (h - height) * parseInt(top) / 100\r\n                            this.canvasRotate('img', cCtx, watermarkImg, angle, imgX, imgY, width, height)\r\n                            resolve(types[type](this.canvas, mimeType))\r\n                        }\r\n                        return\r\n                    }             \r\n                    if (this.textWatermark) {\r\n                        const height = this.limit(12 * size, 12, 100)\r\n                        cCtx.font = height + 'px Georgia'\r\n                        const text = this.textWatermark,\r\n                        width = cCtx.measureText(text).width,\r\n                        textX = (w - width * 1.031 )  * parseInt(left) / 100,\r\n                        textY = (h - height * 2.82)  * parseInt(top) / 100\r\n                        // 变量申请\r\n                        cCtx.fillStyle = this.color || this.averageColor\r\n                        // console.log(this.cCtx.fillStyle)\r\n                        if(cCtx.fillStyle === '#ffffff') {\r\n                            cCtx.fillStyle = '#000'\r\n                        }\r\n                        this.canvasRotate('text', cCtx, text, angle, textX, textY, width, height)\r\n                        resolve(types[type](this.canvas, mimeType))\r\n                        return\r\n                    }\r\n                    resolve(types[type](this.canvas, mimeType))\r\n                })\r\n            },\r\n            canvasRotate(type, ctx, target, angle, x, y, width,height) {\r\n                ctx.save()\r\n                const halfHeight = height / 2,\r\n                halfWidth = width / 2\r\n                ctx.translate(x + halfWidth, y + halfHeight)\r\n                ctx.rotate(Math.PI / 180 * angle)\r\n                if (type === 'img') {\r\n                    ctx.drawImage(\r\n                        target,\r\n                        -halfWidth,\r\n                        -halfHeight,\r\n                        width,\r\n                        height\r\n                    )\r\n                } else {\r\n                    ctx.fillText(target, -halfWidth , -halfHeight)\r\n                }\r\n                ctx.restore()\r\n            },\r\n            changeImage(imgAddress) {\r\n                if (this.noImage) return\r\n                this.averageColor = null\r\n                if (imgAddress) {\r\n                    this.createImage(imgAddress)\r\n                    return\r\n                }\r\n                this.inputHandle()\r\n            },\r\n            // 工具\r\n            getPixelRatio(context) {\r\n                const backingStore = context.backingStorePixelRatio ||\r\n                context.webkitBackingStorePixelRatio ||\r\n                context.mozBackingStorePixelRatio ||\r\n                context.msBackingStorePixelRatio ||\r\n                context.oBackingStorePixelRatio ||\r\n                context.backingStorePixelRatio || 1\r\n                return (window.devicePixelRatio || 1) / backingStore\r\n            },\r\n            uploadImg(e) {\r\n                this.createImage(e.target.files[0])\r\n                this.noImage = false\r\n            },\r\n            getFileSrc(src) {\r\n                if (Object.prototype.toString.call(src) === '[object File]') {\r\n                   src = window.URL.createObjectURL(src)\r\n                }\r\n                return src\r\n            },\r\n            createImage(imgfile) {\r\n                let img = new Image()\r\n                //  url , imgsrc, 文件  三种情况\r\n                img.crossOrigin = 'anonymous'\r\n                img.src = this.getFileSrc(imgfile)\r\n                img.onload = () => { // 等到图片加载进来之后\r\n                    this.animation(img)\r\n                }\r\n            },\r\n            inputHandle() {\r\n                document.getElementById('file-input').click()\r\n            },\r\n            getImageColor(data) { \r\n                let r=0, g=0, b=0\r\n                // 取所有像素的平均值\r\n                const num = 50\r\n                for (var row = 0; row < num; row++) {\r\n                    for (var col = 0; col < num; col++) {\r\n                        r += data[((num * row) + col) * 4];\r\n                        g += data[((num * row) + col) * 4 + 1];\r\n                        b += data[((num * row) + col) * 4 + 2];\r\n                    }\r\n                }\r\n                // 求取平均值\r\n                r /= (num * num);\r\n                g /= (num * num);\r\n                b /= (num * num);\r\n                // 将最终的值取整\r\n                r = Math.round(r);\r\n                g = Math.round(g);\r\n                b = Math.round(b);\r\n                return `rgba(${255 - r}, ${255 - g}, ${255 - b}, 1)`\r\n            }\r\n        },\r\n        mounted() {\r\n            // 解决 字体模糊\r\n            const { mountNode } = this.$refs\r\n            const { clientWidth, clientHeight } = mountNode\r\n            // p可以优化\r\n            this.options = {\r\n                width: clientWidth,\r\n                height: clientHeight\r\n            }\r\n            // canvas dom\r\n            let canvasDom =  document.createElement('canvas')\r\n            canvasDom.style.width =  clientWidth + 'px'\r\n            canvasDom.style.height = clientHeight + 'px'\r\n            mountNode.appendChild(canvasDom)\r\n            this.ctx = canvasDom.getContext('2d')\r\n            const pixelRatio = this.pixelRatio = this.getPixelRatio(this.ctx)\r\n            canvasDom.width = clientWidth * pixelRatio\r\n            canvasDom.height = clientHeight * pixelRatio\r\n            this.ctx.scale(pixelRatio, pixelRatio)\r\n            // console.log(this.$slots.initial[0].data.attrs.src)\r\n            if (this.defaultImgUrl || this.$slots.defaultImgUrl) {\r\n                const src = this.defaultImgUrl ? this.defaultImgUrl : this.$slots.defaultImgUrl[0].data.attrs.src\r\n                this.createImage(src)\r\n                this.noImage = false\r\n            }\r\n            this.$emit('input', {\r\n                getImage: this.getImage,\r\n                changeImage: this.changeImage\r\n            })           \r\n        }\r\n    }\r\n</script>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./cropblg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./cropblg.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cropblg.vue?vue&type=template&id=ff1d5020&\"\nimport script from \"./cropblg.vue?vue&type=script&lang=js&\"\nexport * from \"./cropblg.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\nimport crop from './cropblg.vue';\r\n\r\n// const components = [progresschart];\r\n\r\n// 定义 install 方法\r\nconst install = function (Vue) {\r\n    if (install.installed) return\r\n    install.installed = true\r\n    // 遍历并注册全局组件\r\n    // components.map(component => {\r\n        Vue.component(crop.name, crop)\r\n    // })\r\n}\r\n\r\n//  全局引用可自动安装\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n    install(window.Vue);\r\n}\r\nexport default {\r\n    install,\r\n    crop\r\n};\r\nexport { crop };","import Vue from 'vue'\r\nimport App from './App.vue'\r\n// import crop from '../lib/vue-cropblg.umd'\r\nimport crop from '../packages/index'\r\n\r\nVue.use(crop)\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(App),\r\n}).$mount('#app')\r\n"],"sourceRoot":""}