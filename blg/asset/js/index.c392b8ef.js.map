{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/App.vue?cc28","webpack:///./examples/Range.vue?d1b8","webpack:///./examples/App.vue?4dc5","webpack:///./examples/Range.vue?c3d2","webpack:///examples/Range.vue","webpack:///./examples/Range.vue?2586","webpack:///./examples/Range.vue?2155","webpack:///examples/App.vue","webpack:///./examples/App.vue?853c","webpack:///./examples/App.vue?82c0","webpack:///./packages/cropblg.vue?786b","webpack:///packages/cropblg.vue","webpack:///./packages/cropblg.vue?dc1f","webpack:///./packages/cropblg.vue","webpack:///./packages/index.js","webpack:///./examples/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","index","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Range_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Range_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_9d7e9694_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_v","directives","rawName","expression","type","placeholder","domProps","on","input","$event","target","composing","textWatermark","color","_s","option","min","max","step","bar-height","model","callback","$$v","$set","class","blue","shape","click","getImageData","crop","changeImage","staticStyle","width","height","background-color","position","imageWatermark","imgWatermark","angle","slot","src","text-align","imageData","alt","_e","staticRenderFns","Rangevue_type_template_id_579e5c8d_render","mt-range--disabled","disabled","_t","ref","style","border-top-width","barHeight","progress","left","touchstart","start","touchmove","drag","touchend","end","Rangevue_type_template_id_579e5c8d_staticRenderFns","Rangevue_type_script_lang_js_","props","Number","default","Boolean","computed","Math","floor","thumb","content","dragState","methods","event","touches","getThumbPosition","thumbClickDetalX","clientX","thumbBoxLeft","thumbStartLeft","thumbStartTop","top","contentBox","getBoundingClientRect","deltaX","pageX","stepCount","ceil","newPosition","newProgress","$emit","round","thumbBox","mounted","$refs","examples_Rangevue_type_script_lang_js_","component","componentNormalizer","Range","Appvue_type_script_lang_js_","cropAction","rangeValue","components","range","uploadImg","e","files","_getImageData","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getImage","sent","stop","arguments","examples_Appvue_type_script_lang_js_","App_component","App","cropblgvue_type_template_id_24d0d0de_render","overflow","handleStart","handleMove","display","justify-content","align-items","flex-wrap","inputHandle","stopPropagation","accept","change","cropblgvue_type_template_id_24d0d0de_staticRenderFns","cropblgvue_type_script_lang_js_","noImage","ctx","options","pixelRatio","scale","canvas","image","points","lines","cropper","corePoint","startPoint","touchBar","nookSide","rotateAngle","watch","draw","animation","img","clientW","clientH","_this$options","currentW","currentH","k","minNum","element","x","y","clientWidth","clientHeight","maxRadius","arc","_this$options2","clearRect","fillBackground","fillImage","averageColor","getImageColor","fillArcCropper","updatePoint","fillRectCropper","drawTouchBar","alpha","h1","h2","lineWidth","fillStyle","fillRect","strokeStyle","beginPath","PI","stroke","x1","sin","y1","cos","x2","y2","x0","y0","moveTo","lineTo","fill","canvasRotate","cWidth","cHeight","forecastX","forecastY","diffX","diffY","lineHeight","halfLineHeight","strokeRect","forEach","save","translate","rotate","restore","handleArcMove","_ref","limit","getDistance","pageY","_this$options3","side","getNewCropper","touchX","touchY","cropperWidth","cropperHeight","cropperX","cropperY","handlePointMove","_ref2","newCropper","_this$getNewCropper","renderCropper","handleLineMove","_ref3","_this$getNewCropper2","objectSpread","handleImageMove","_ref4","offsetX","offsetY","getCoordinateByEvent","rect","touch","coordinate","clientY","_this$options4","preventDefault","startTouches","getPointByCoordinate","abs","checkRegion","checkArc","isPointInPath","_ref5","_this","some","point","line","p1","p2","sqrt","_this2","undefined","mimeType","quality","types","Base64","promise_default","a","resolve","toDataURL","Blob","toBlob","blob","w","h","document","createElement","cCtx","getContext","radius","clip","reject","_this2$position","slicedToArray","_this2$position$","_this2$position$2","_this2$position$3","size","_this2$position$4","watermarkImg","Image","getFileSrc","crossOrigin","onload","imgX","parse_int_default","imgY","font","text","measureText","textX","textY","halfHeight","halfWidth","drawImage","fillText","imgAddress","createImage","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","toString","URL","createObjectURL","imgfile","_this3","getElementById","g","b","num","row","col","concat","mountNode","canvasDom","appendChild","defaultImgUrl","$slots","packages_cropblgvue_type_script_lang_js_","cropblg_component","cropblg","install","Vue","installed","packages_0","packages_install","vue_runtime_esm","render","$mount"],"mappings":"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","file":"asset/js/index.c392b8ef.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Range.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Range.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('p',{staticClass:\"watermark\"},[_vm._v(\"输入水印文字：\\n      \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.textWatermark),expression:\"textWatermark\"}],attrs:{\"type\":\"text\",\"placeholder\":\"可以输入水印\"},domProps:{\"value\":(_vm.textWatermark)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.textWatermark=$event.target.value}}})]),_c('p',{staticClass:\"watermark\"},[_vm._v(\"输入水印颜色：\\n      \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.color),expression:\"color\"}],attrs:{\"type\":\"text\",\"placeholder\":\"可以输入水印\"},domProps:{\"value\":(_vm.color)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.color=$event.target.value}}})]),_c('p',{staticClass:\"range\"},[_c('span',[_vm._v(\"水印X方位：\"+_vm._s(_vm.option[0])+\"%\")]),_c('range',{attrs:{\"min\":0,\"max\":100,\"step\":1,\"bar-height\":5},model:{value:(_vm.option[0]),callback:function ($$v) {_vm.$set(_vm.option, 0, $$v)},expression:\"option[0]\"}})],1),_c('p',{staticClass:\"range\"},[_c('span',[_vm._v(\"水印Y方位：\"+_vm._s(_vm.option[1])+\"%\")]),_c('range',{attrs:{\"min\":0,\"max\":100,\"step\":1,\"bar-height\":5},model:{value:(_vm.option[1]),callback:function ($$v) {_vm.$set(_vm.option, 1, $$v)},expression:\"option[1]\"}})],1),_c('p',{staticClass:\"range\"},[_c('span',[_vm._v(\"水印大小：\"+_vm._s(_vm.option[2]))]),_c('range',{attrs:{\"min\":0.1,\"max\":30,\"step\":1,\"bar-height\":5},model:{value:(_vm.option[2]),callback:function ($$v) {_vm.$set(_vm.option, 2, $$v)},expression:\"option[2]\"}})],1),_c('p',{staticClass:\"range\"},[_c('span',[_vm._v(\"水印旋转角度：\"+_vm._s(_vm.option[3])+\"°\")]),_c('range',{attrs:{\"min\":0,\"max\":360,\"step\":1,\"bar-height\":5},model:{value:(_vm.option[3]),callback:function ($$v) {_vm.$set(_vm.option, 3, $$v)},expression:\"option[3]\"}})],1),_c('p',{staticClass:\"operation\"},[_c('button',{class:{blue: _vm.shape == 'rect'},on:{\"click\":function($event){_vm.shape='rect'}}},[_vm._v(\"矩形截图\")]),_c('button',{class:{blue: _vm.shape == 'arc'},on:{\"click\":function($event){_vm.shape='arc'}}},[_vm._v(\"圆形截图\")]),_c('button',{staticClass:\"blue\",on:{\"click\":_vm.getImageData}},[_vm._v(\"点我截图\")]),_c('button',{staticClass:\"blue\",on:{\"click\":function($event){return _vm.crop.changeImage()}}},[_vm._v(\"点我换图\")])]),_c('crop',{staticStyle:{\"width\":\"100%\",\"height\":\"560px\",\"background-color\":\"#f1f3f5\"},attrs:{\"position\":_vm.option,\"textWatermark\":_vm.textWatermark,\"imageWatermark\":_vm.imgWatermark,\"angle\":15,\"color\":_vm.color,\"shape\":_vm.shape},model:{value:(_vm.crop),callback:function ($$v) {_vm.crop=$$v},expression:\"crop\"}},[_c('template',{slot:\"placeholder\"},[_c('img',{staticStyle:{\"width\":\"20%\"},attrs:{\"src\":\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1057851374,249752393&fm=26&gp=0.jpg\"}})])],2),(_vm.cropAction)?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('p',[_vm._v(\"长按保存图片\")]),(_vm.cropAction)?_c('img',{staticStyle:{\"width\":\"70%\"},attrs:{\"src\":_vm.imageData,\"alt\":\"\"}}):_vm._e()]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mt-range\",class:{ 'mt-range--disabled': _vm.disabled }},[_vm._t(\"start\"),_c('div',{ref:\"content\",staticClass:\"mt-range-content\"},[_c('div',{staticClass:\"mt-range-runway\",style:({ 'border-top-width': _vm.barHeight + 'px' })}),_c('div',{staticClass:\"mt-range-progress\",style:({ width: _vm.progress + '%', height: _vm.barHeight + 'px' })}),_c('div',{ref:\"thumb\",staticClass:\"mt-range-thumb\",style:({ left: _vm.progress + '%' }),on:{\"touchstart\":function($event){return _vm.start($event)},\"touchmove\":function($event){return _vm.drag($event)},\"touchend\":function($event){return _vm.end()}}})]),_vm._t(\"end\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"mt-range\" :class=\"{ 'mt-range--disabled': disabled }\">\r\n    <slot name=\"start\"></slot>\r\n    <div class=\"mt-range-content\" ref=\"content\">\r\n      <div class=\"mt-range-runway\" :style=\"{ 'border-top-width': barHeight + 'px' }\"></div>\r\n      <div class=\"mt-range-progress\" :style=\"{ width: progress + '%', height: barHeight + 'px' }\"></div>\r\n      <div class=\"mt-range-thumb\" \r\n        @touchstart=\"start($event)\"\r\n        @touchmove=\"drag($event)\"\r\n        @touchend=\"end()\" \r\n        ref=\"thumb\"\r\n        :style=\"{ left: progress + '%' }\"></div>\r\n    </div>\r\n    <slot name=\"end\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n    .mt-range {\r\n      position: relative;\r\n      display: flex;\r\n      height: 40px;\r\n      line-height: 40px;\r\n    }\r\n      .mt-range > * {\r\n        display: flex;\r\n        display: -webkit-box;\r\n      }\r\n      .mt-range *[slot=start] {\r\n        margin-right: 5px;\r\n      }\r\n      .mt-range *[slot=end] {\r\n        margin-left: 5px;\r\n      }\r\n      .mt-range-content {\r\n        position: relative;\r\n        flex: 1;\r\n        margin-right: 40px;\r\n      }\r\n      .mt-range-runway {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        left: 0;\r\n        right: -40px;\r\n        border-top-color: #a9acb1;\r\n        border-top-style: solid;\r\n      }\r\n      .mt-range-thumb {\r\n        background-color: red;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 100%;\r\n        cursor: move;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,.4);\r\n      }\r\n      .mt-range-progress {\r\n        position: absolute;\r\n        display: block;\r\n        background-color: #1890ff;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 0;\r\n      }\r\n      .mt-range-disabled {\r\n        opacity: 0.5;\r\n      }\r\n\r\n</style>\r\n\r\n<script type=\"text/babel\">\r\n  export default {\r\n    name: 'mt-range',\r\n    props: {\r\n      min: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      max: {\r\n        type: Number,\r\n        default: 100\r\n      },\r\n      step: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      value: {\r\n        type: Number\r\n      },\r\n      barHeight: {\r\n        type: Number,\r\n        default: 1\r\n      }\r\n    },\r\n    computed: {\r\n      progress() {\r\n        const value = this.value;\r\n        if (typeof value === 'undefined' || value === null) return 0;\r\n        return Math.floor((value - this.min) / (this.max - this.min) * 100);\r\n      }\r\n    },\r\n    data(){\r\n        return {\r\n            thumb: null,\r\n            content: null,\r\n            dragState: {}\r\n        }\r\n    },\r\n    methods: {\r\n         start(event) {\r\n          if (this.disabled) return;\r\n          event = event.touches[0]\r\n          const position = this.getThumbPosition()\r\n          const thumbClickDetalX = event.clientX - position.thumbBoxLeft;\r\n          this.dragState = {\r\n            thumbStartLeft: position.left,\r\n            thumbStartTop: position.top,\r\n            thumbClickDetalX: thumbClickDetalX\r\n          };\r\n        },\r\n        drag(event) {\r\n          if (this.disabled) return;\r\n          event = event.touches[0]\r\n          const dragState = this.dragState\r\n          const contentBox = this.content.getBoundingClientRect();\r\n          const deltaX = event.pageX - contentBox.left - dragState.thumbStartLeft - dragState.thumbClickDetalX;\r\n          const stepCount = Math.ceil((this.max - this.min) / this.step);\r\n          const newPosition = (dragState.thumbStartLeft + deltaX) - (dragState.thumbStartLeft + deltaX) % (contentBox.width / stepCount);\r\n          let newProgress = newPosition / contentBox.width;\r\n          if (newProgress < 0) {\r\n            newProgress = 0;\r\n          } else if (newProgress > 1) {\r\n            newProgress = 1;\r\n          }\r\n          this.$emit('input', Math.round(this.min + newProgress * (this.max - this.min)))\r\n        },\r\n        end() {\r\n          if (this.disabled) return;\r\n          this.$emit('change', this.value);\r\n          this.dragState = {};\r\n        },\r\n        getThumbPosition() {\r\n            const contentBox = this.content.getBoundingClientRect();\r\n            const thumbBox = this.thumb.getBoundingClientRect();\r\n            return {\r\n                left: thumbBox.left - contentBox.left,\r\n                top: thumbBox.top - contentBox.top,\r\n                thumbBoxLeft: thumbBox.left\r\n            };\r\n        }\r\n    },\r\n    mounted() {\r\n        this.thumb = this.$refs.thumb;\r\n        this.content = this.$refs.content;\r\n\r\n}\r\n  };\r\n</script>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Range.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Range.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Range.vue?vue&type=template&id=579e5c8d&\"\nimport script from \"./Range.vue?vue&type=script&lang=js&\"\nexport * from \"./Range.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Range.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"app\">\r\n  <p class=\"watermark\">输入水印文字：\r\n      <input type=\"text\" placeholder=\"可以输入水印\" v-model=\"textWatermark\" >      \r\n   </p>\r\n    <p class=\"watermark\">输入水印颜色：\r\n      <input type=\"text\" placeholder=\"可以输入水印\" v-model=\"color\" >      \r\n   </p>\r\n       <p class=\"range\">\r\n     <span>水印X方位：{{option[0]}}%</span>\r\n      <range\r\n        v-model=\"option[0]\"\r\n        :min=\"0\"\r\n        :max=\"100\"\r\n        :step=\"1\"\r\n        :bar-height=\"5\">\r\n      </range>\r\n    </p>\r\n    <p class=\"range\">\r\n     <span>水印Y方位：{{option[1]}}%</span>\r\n      <range\r\n        v-model=\"option[1]\"\r\n        :min=\"0\"\r\n        :max=\"100\"\r\n        :step=\"1\"\r\n        :bar-height=\"5\">\r\n      </range>\r\n    </p>\r\n       <p class=\"range\">\r\n     <span>水印大小：{{option[2]}}</span>\r\n      <range\r\n        v-model=\"option[2]\"\r\n        :min=\"0.1\"\r\n        :max=\"30\"\r\n        :step=\"1\"\r\n        :bar-height=\"5\">\r\n      </range>\r\n    </p>\r\n     <p class=\"range\">\r\n     <span>水印旋转角度：{{option[3]}}°</span>\r\n      <range\r\n        v-model=\"option[3]\"\r\n        :min=\"0\"\r\n        :max=\"360\"\r\n        :step=\"1\"\r\n        :bar-height=\"5\">\r\n      </range>\r\n    </p>\r\n    <p class=\"operation\">\r\n      <button @click=\"shape='rect'\" :class=\"{blue: shape == 'rect'}\" >矩形截图</button>\r\n      <button @click=\"shape='arc'\"  :class=\"{blue: shape == 'arc'}\">圆形截图</button>\r\n      <button class=\"blue\" @click=\"getImageData\">点我截图</button>\r\n      <button class=\"blue\" @click=\"crop.changeImage()\">点我换图</button>\r\n    </p>\r\n\r\n    <crop\r\n      style=\"width:100%;height:560px;background-color: #f1f3f5;\"\r\n      v-model=\"crop\"\r\n      :position=\"option\"\r\n      :textWatermark = \"textWatermark\"\r\n      :imageWatermark=\"imgWatermark\"\r\n      :angle=15\r\n      :color=color\r\n      :shape=shape\r\n    >\r\n          <!-- defaultImgUrl = \"http://img.zcool.cn/community/01bc0f59c9a9b0a8012053f85f066c.jpg\" -->\r\n    <!-- :imageWatermark = \"require('./assets/logo.png')\" -->\r\n      <template slot=\"placeholder\">\r\n        <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1057851374,249752393&fm=26&gp=0.jpg\" style=\"width:20%\" />\r\n      </template>\r\n<!-- \r\n      <template slot=\"defaultImgUrl\"> \r\n        <img  src=\"./assets/u=1388650196,3398819234&fm=26&gp=0.jpg\" />\r\n      </template> -->\r\n\r\n     </crop>\r\n    <div style=\"text-align:center\" v-if=\"cropAction\">\r\n          <p>长按保存图片</p>\r\n          <img v-if=\"cropAction\" :src=\"imageData\" alt=\"\" style=\"width:70%\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport range from './Range'\r\nexport default {\r\n  name: 'app',\r\n  data() {\r\n    return {\r\n        option: [70, 70, 0.2, 12],\r\n        color:'#f60',\r\n        imgWatermark: '',\r\n        textWatermark: '板蓝根出品，必属精品',\r\n        crop:{},\r\n        cropAction: false,\r\n        imageData: null,\r\n        shape: 'arc',\r\n        rangeValue: 50\r\n    }\r\n  },\r\n  components: {\r\n    range\r\n  },\r\n  methods: {\r\n    uploadImg(e) {\r\n      this.imgWatermark = e.target.files[0]\r\n    },\r\n    async getImageData() {\r\n         const imageData = await this.crop.getImage('Base64', 'image/png', 2)\r\n         this.imageData = imageData\r\n         this.cropAction = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  body,html {\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n  \r\n  }\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  #app {\r\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    width: 100%;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none; /* Konqueror */\r\n    -moz-user-select: none; /* Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently not supported by any browser */\r\n  }\r\n  .operation .blue {\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    background-color: #1890ff;\r\n    border-color: #1890ff;\r\n    border-style: solid;\r\n    \r\n  }\r\n  .operation button {\r\n    position: relative;\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n    background-image: none;\r\n    border: 1px solid transparent;\r\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.015);\r\n    box-shadow: 0 2px 0 rgba(0,0,0,0.015);\r\n    cursor: pointer;\r\n    -webkit-transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n    transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    -ms-touch-action: manipulation;\r\n    touch-action: manipulation;\r\n    height: 32px;\r\n    padding: 0 15px;\r\n    font-size: 14px;\r\n    color: rgba(0,0,0,0.65);\r\n    background-color: #fff;\r\n    border-color: #1890ff;\r\n    border-style: dashed;\r\n    text-shadow: 0 -1px 0 rgba(0,0,0,0.12);\r\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.045);\r\n    box-shadow: 0 2px 0 rgba(0,0,0,0.045);\r\n    line-height: 1.499;\r\n    margin: 20px;\r\n  }\r\n  .range {\r\n    display: flex;\r\n    padding: 10px 10%\r\n\r\n  }\r\n  .range> span {\r\n    flex: 1\r\n  }\r\n  .range > div {\r\n    flex: 2.5\r\n  }\r\n  .watermark input {\r\n    /* -webkit-appearance: none; */\r\n    /* width：180px; */\r\n    position: relative;\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border-radius: 4px;\r\n    border: 1px solid #dcdfe6;\r\n    box-sizing: border-box;\r\n    color: #606266;\r\n    display: inline-block;\r\n    font-size: inherit;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    outline: none;\r\n    padding: 0 15px;\r\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    margin-bottom: 20px;\r\n  }\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9d7e9694&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"mountNode\",staticClass:\"mount-node\",staticStyle:{\"overflow\":\"hidden\"},on:{\"touchstart\":function($event){return _vm.handleStart($event)},\"touchmove\":function($event){return _vm.handleMove($event)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.noImage),expression:\"noImage\"}],staticClass:\"no-image-file\",staticStyle:{\"height\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"flex-wrap\":\"wrap\"},on:{\"click\":_vm.inputHandle,\"touchstart\":function($event){$event.stopPropagation();return (function (){})($event)},\"touchmove\":function($event){$event.stopPropagation();return (function (){})($event)}}},[_vm._t(\"placeholder\",[_c('span',[_vm._v(\"暂时没有图片,请选择图像\")])]),_c('div',{staticStyle:{\"display\":\"none\"}},[_c('input',{attrs:{\"type\":\"file\",\"id\":\"file-input\",\"accept\":\"image/jpeg,image/x-icon,image/png\"},on:{\"change\":_vm.uploadImg}}),_vm._t(\"defaultImgUrl\")],2)],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div ref=\"mountNode\" \r\n        class=\"mount-node\" \r\n        @touchstart=\"handleStart($event)\"\r\n        @touchmove=\"handleMove($event)\"\r\n        style=\" overflow: hidden;\"\r\n   \r\n    >\r\n         <!-- style=\" overflow: hidden;\" -->\r\n    <!--  不能绑在wrap 上=== 这样子任何点击都会计算 -后期优化-->\r\n        <div v-show=\"noImage\" @click=\"inputHandle\" class=\"no-image-file\" style=\"height: 100%; display: flex;justify-content: center;align-items: center;flex-wrap: wrap;\"  @touchstart.stop=\"()=>{}\" @touchmove.stop=\"()=>{}\">\r\n            <!-- <span>暂时没有图片,请选择图像</span> -->\r\n            <slot name=\"placeholder\"><span>暂时没有图片,请选择图像</span></slot>\r\n            <div style=\"display:none\">\r\n                <input \r\n                    @change=\"uploadImg\"\r\n                    type=\"file\"\r\n                    id=\"file-input\"\r\n                    accept=\"image/jpeg,image/x-icon,image/png\"\r\n                >\r\n                <slot name=\"defaultImgUrl\"></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'crop',\r\n        props:['value', 'position', 'textWatermark', 'imageWatermark', 'defaultImgUrl', 'color', 'angle', 'shape'],\r\n        data() {\r\n            return {\r\n                // ready: false,\r\n                noImage: true,\r\n                ctx: null,\r\n                options: null,\r\n                pixelRatio: null,\r\n                scale:1,\r\n                canvas: null,\r\n                image: {},\r\n                points: [],\r\n                lines: [],\r\n                cropper: {},\r\n                corePoint: {},\r\n                startPoint: {},\r\n                touchBar: {},\r\n                nookSide: 30,\r\n                rotateAngle: 0\r\n            }\r\n        },\r\n        watch: {\r\n            shape() {\r\n                if (!this.noImage) {\r\n                    this.draw()\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            animation(img){\r\n                    const clientW = img.width,\r\n                    clientH = img.height,\r\n                    { width, height } = this.options\r\n                    let currentW = clientW,\r\n                        currentH = clientH,\r\n                        k = 1 // contain 时的缩放比\r\n                    // contain 图片\r\n                    if (clientW > width) {\r\n                        currentW = width\r\n                        k = currentW / clientW\r\n                        currentH = k * clientH\r\n                    }\r\n                    if (currentH > height) {\r\n                        currentH = height\r\n                        k = currentH / clientH\r\n                        currentW = k * clientW\r\n                    }\r\n                    // 针对小图片\r\n                    const minNum = 100\r\n                    if (clientW < minNum) {\r\n                        currentW = minNum\r\n                        k = currentW / clientW\r\n                        currentH = k * clientH\r\n                    }\r\n                    if (currentH < minNum) {\r\n                        currentH = minNum;\r\n                        k = currentH / clientH\r\n                        currentW = k * clientW\r\n                    }\r\n                    this.scale = k\r\n                    // 针对小图片\r\n                    this.image = {\r\n                        element: img,\r\n                        width: currentW,\r\n                        height: currentH,\r\n                        x: (width - currentW) / 2,\r\n                        y: (height - currentH) / 2,\r\n                        clientWidth: clientW,\r\n                        clientHeight: clientH\r\n                    }\r\n\r\n                    const corePoint = this.corePoint = {x: width / 2 ,y : height / 2} \r\n                    this.maxRadius = Math.min(width, height) / 2\r\n                    this.arc = {\r\n                        x: corePoint.x,\r\n                        y: corePoint.y,\r\n                        r: this.maxRadius  / 2\r\n                    }\r\n                    this.cropper = {\r\n                        x: (width - currentW / 2) / 2,\r\n                        y: (height - currentH / 2) / 2,\r\n                        width: currentW  / 2,\r\n                        height: currentH / 2\r\n                    }\r\n                    this.touchBar = {\r\n                        x: width - 60 - 14,\r\n                        y: 10,\r\n                        width: 60,\r\n                        height: 60\r\n                    }\r\n                    this.draw()\r\n            },\r\n            draw() {\r\n                const { width, height } = this.options\r\n                // 避免预览到背景\r\n                this.ctx.clearRect(0, 0, width, height)\r\n                // console.time('fillBackground')  \r\n                this.fillBackground()\r\n                // console.timeEnd('fillBackground')\r\n                // console.time('fillImage')\r\n                this.fillImage()\r\n                // console.timeEnd('fillImage')\r\n                if (!this.averageColor) {\r\n                        this.averageColor = this.getImageColor(this.ctx.getImageData(this.corePoint.x - 25,  this.corePoint.y - 25, 50, 50).data)\r\n                }\r\n                if (this.shape === 'arc') {\r\n                    this.fillArcCropper()\r\n                } else {\r\n                    this.updatePoint()\r\n                    this.fillRectCropper()\r\n                }\r\n                //  console.time('drawTouchBar')\r\n                if (this.angle) {\r\n                    this.drawTouchBar()\r\n                }\r\n                // console.timeEnd('drawTouchBar')\r\n                // this.preview()\r\n            },\r\n            drawTouchBar() {\r\n                const ctx = this.ctx,\r\n                touchBar = this.touchBar,\r\n                color = this.color || this.averageColor,\r\n                x = touchBar.x + touchBar.width * 0.6,\r\n                y =  touchBar.y + touchBar.height * 0.64,\r\n                r = touchBar.width * 0.41,\r\n                alpha = 6,\r\n                h1 = touchBar.width * 0.1,\r\n                h2 =  touchBar.width * 0.18\r\n                ctx.lineWidth = 2\r\n                // ctx.fillStyle = '#000';\r\n                // ctx.fillRect(touchBar.x, touchBar.y, touchBar.width, touchBar.height)\r\n                ctx.fillStyle = color\r\n                ctx.fillRect(x - touchBar.width / 6, y - touchBar.height / 6, touchBar.width * 0.43, touchBar.height * 0.43)\r\n                ctx.strokeStyle = color\r\n                ctx.beginPath()\r\n                ctx.arc(x, y, r, Math.PI/180 * 180, -Math.PI/2 + alpha, false)\r\n                ctx.stroke()\r\n                if(alpha < 2*Math.PI) {\r\n                    const x1 = x + (r - h1) * Math.sin(alpha),\r\n                    y1 = y - (r - h1) * Math.cos(alpha),\r\n                    x2 = x + (r + h1) * Math.sin(alpha),\r\n                    y2 = y - (r + h1) * Math.cos(alpha),\r\n                    x0 = (x1 + x2) / 2 + h2 * Math.sin(alpha + Math.PI/2),\r\n                    y0 = (y1 + y2) / 2 - h2 * Math.cos(alpha + Math.PI/2)\r\n                    ctx.beginPath()\r\n                    ctx.moveTo(x0, y0)\r\n                    ctx.lineTo(x1, y1)\r\n                    ctx.lineTo(x2, y2)\r\n                    ctx.fill()\r\n                }\r\n            },\r\n            fillImage() {\r\n                const image = this.image;\r\n                const ctx = this.ctx\r\n                const rotateAngle = this.rotateAngle\r\n                this.canvasRotate('img', ctx, image.element, rotateAngle, image.x, image.y, image.width, image.height)\r\n                // ctx.drawImage(image.element, image.x, image.y, image.width, image.height)\r\n            },\r\n            updatePoint() {\r\n                // 点中点和线 不用 执行 \r\n                const c = this.cropper;\r\n                const nookSide =  this.nookSide,\r\n                cWidth = c.x + c.width,\r\n                cHeight = c.y + c.height,\r\n                forecastX = cWidth - nookSide,\r\n                forecastY = cHeight - nookSide\r\n                this.points = [\r\n                    {\r\n                        x: c.x,\r\n                        y: c.y,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: 0,\r\n                        diffY: 0\r\n                    },\r\n                    {\r\n                        x: forecastX ,\r\n                        y: c.y,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: nookSide,\r\n                        diffY: 0\r\n                    },\r\n                    {\r\n                        x: forecastX ,\r\n                        y: forecastY,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: nookSide,\r\n                        diffY: nookSide\r\n                    },\r\n                    {\r\n                        x: c.x,\r\n                        y: forecastY,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: 0,\r\n                        diffY: nookSide\r\n                    }\r\n                ]\r\n                // 寻找四根线\r\n                const lineHeight = nookSide / .7,\r\n                halfLineHeight = lineHeight / 2\r\n                this.lines = [\r\n                     {\r\n                        x: c.x,\r\n                        y: c.y - halfLineHeight,\r\n                        width: c.width,\r\n                        height: lineHeight\r\n                    },\r\n                    {\r\n                        x: cWidth - halfLineHeight,\r\n                        y: c.y,\r\n                        width: lineHeight,\r\n                        height: c.height\r\n                    },\r\n                    {\r\n                        x: c.x,\r\n                        y: cHeight - halfLineHeight,\r\n                        width: c.width,\r\n                        height: lineHeight\r\n                    },\r\n                    {\r\n                        x: c.x - halfLineHeight,\r\n                        y: c.y,\r\n                        width: lineHeight,\r\n                        height: c.height\r\n                    }\r\n                ]\r\n            },\r\n            fillRectCropper() {\r\n                const ctx = this.ctx,\r\n                cropper = this.cropper,\r\n                points = this.points,\r\n                color = this.color || this.averageColor\r\n                ctx.strokeStyle = color\r\n                ctx.lineWidth = 2\r\n                ctx.strokeRect(cropper.x, cropper.y, cropper.width, cropper.height)\r\n                ctx.fillStyle = color\r\n                const nookSide = this.nookSide / 8\r\n                points.forEach((element, index) => {\r\n                    ctx.save()\r\n                    ctx.translate(element.x + element.diffX, element.y + element.diffY)\r\n                    ctx.rotate(index * 90 * (Math.PI/180))\r\n                    ctx.fillRect(-nookSide, -nookSide, element.height, nookSide * 2)\r\n                    ctx.fillRect(-nookSide, -nookSide, nookSide * 2, element.width)\r\n                    // if(index % 2 === 0){\r\n                    //     ctx.fillRect(-nookSide, cropper.height / 2 - element.nookSide , element.nookSide / 4, element.nookSide * 2)\r\n                    // } else {\r\n                    //     ctx.fillRect(-nookSide, cropper.width / 2 - element.nookSide, element.nookSide / 4, element.nookSide * 2)\r\n                    // }\r\n                    ctx.restore()\r\n                });\r\n                // console.log(this.arc.r)\r\n                // 圆\r\n\r\n                \r\n            },\r\n            fillArcCropper() {\r\n                const ctx = this.ctx\r\n                ctx.beginPath()\r\n                ctx.strokeStyle = this.color || this.averageColor\r\n                ctx.lineWidth =  2 // this.nookSide / 0.7\r\n                ctx.arc(this.arc.x, this.arc.y, this.arc.r, 0, Math.PI * 2)\r\n                ctx.stroke();\r\n            },\r\n            handleArcMove({x, y}) {\r\n                this.arc.r = this.limit(this.getDistance({pageX: x, pageY: y}, {pageX: this.arc.x, pageY: this.arc.y}), this.nookSide * 2, this.maxRadius)\r\n                this.draw()\r\n            },\r\n           // 填充背景\r\n            fillBackground() {\r\n                // 多个变量可以用逗号 一次赋值\r\n                const { width, height } = this.options, \r\n                ctx = this.ctx,\r\n                side = 30 ,//width / 80,\r\n                x = Math.ceil(width / side),\r\n                y = Math.ceil(height / side)\r\n                // Math.ceil 向上取整\r\n                ctx.save()\r\n                ctx.fillStyle = '#ccc'\r\n                // y方向\r\n                for (let i = 0; i < y; i++) {//  铺满每一行\r\n                    for (let j = 0; j < x; j++) { // 一行的小方格\r\n                        if ((j + i) % 2 === 0) {\r\n                            ctx.fillRect(j * side, i * side, side, side)\r\n                        }\r\n                    }\r\n                }\r\n                //蒙层 \r\n                ctx.fillStyle = 'rgba(0, 0, 0, .1)'\r\n                ctx.fillRect(0, 0, width, height)\r\n                 //蒙层 \r\n                ctx.restore()\r\n            },\r\n            getNewCropper(touchX, touchY ,cropper) {\r\n               return {\r\n                    cropperWidth:(cropper.x + cropper.width) - touchX,\r\n                    cropperHeight: (cropper.y + cropper.height) - touchY,\r\n                    cropperX: touchX - cropper.x,\r\n                    cropperY: touchY - cropper.y\r\n               }\r\n            },\r\n            handlePointMove({ x, y }) {\r\n                const cropper = this.cropper,\r\n                newCropper = {},\r\n                { cropperWidth, cropperHeight, cropperX, cropperY } = this.getNewCropper(x, y, cropper)\r\n                switch (this.index) {\r\n                    case 0:\r\n                        newCropper.width =  cropperWidth\r\n                        newCropper.height = cropperHeight\r\n                        newCropper.x = x\r\n                        newCropper.y = y\r\n                        break;\r\n                    case 1:\r\n                    // x  不会动\r\n                        newCropper.width =  cropperX\r\n                        newCropper.height =  cropperHeight\r\n                        newCropper.y = y\r\n                        break;\r\n                    case 3:\r\n                    // y 不会动\r\n                        newCropper.width = cropperWidth\r\n                        newCropper.height = cropperY\r\n                        newCropper.x = x\r\n                        break;\r\n                    case 2:\r\n                        newCropper.width = cropperX\r\n                        newCropper.height = cropperY\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.renderCropper(newCropper)\r\n            },\r\n            handleLineMove ({ x, y }) {\r\n                const cropper = this.cropper,\r\n                newCropper = {},\r\n                { cropperWidth, cropperHeight, cropperX, cropperY } = this.getNewCropper(x, y, cropper)\r\n                switch (this.index) {\r\n                    case 3:\r\n                        newCropper.width = cropperWidth\r\n                        newCropper.x = x // 限制\r\n                        break;\r\n                    case 0:\r\n                        newCropper.height = cropperHeight\r\n                        newCropper.y = y // 限制\r\n                        break;\r\n                    case 1:\r\n                        newCropper.width = cropperX\r\n                        break;\r\n                    case 2:\r\n                    // y 不会动\r\n                        newCropper.height = cropperY\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.renderCropper(newCropper)\r\n            },\r\n            renderCropper(newCropper) {\r\n                 if (newCropper.width <= this.nookSide * 4 || newCropper.height <= this.nookSide * 4) {\r\n                    return\r\n                }\r\n                this.cropper = {...this.cropper,...newCropper}\r\n                this.draw()\r\n            },\r\n            handleImageMove ({ x, y }) {\r\n                const s = this.startPoint\r\n                this.image.x = x - s.offsetX\r\n                this.image.y = y - s.offsetY\r\n                this.draw()\r\n            },\r\n            // handleCropperMove({ x, y }) {\r\n            //     const { width, height } = this.options;\r\n            //     const s = this.startPoint;\r\n            //     const oX = s.offsetX;\r\n            //     const oY = s.offsetY;\r\n            //     const maxX = width - this.cropper.width;\r\n            //     const maxY = height - this.cropper.height;\r\n            //     let currentX = x - oX,\r\n            //     currentY = y - oY;\r\n            //     // 判断边界\r\n            //     this.cropper.x = this.limit(currentX, 0, maxX)\r\n            //     this.cropper.y = this.limit(currentY, 0, maxY)\r\n            //     this.draw()\r\n            // },\r\n            getCoordinateByEvent(e){\r\n                const rect = e.target.getBoundingClientRect(),\r\n                touch = e.touches[0],\r\n                coordinate = {\r\n                    x: touch.clientX - rect.left,\r\n                    y: touch.clientY - rect.top\r\n                },\r\n                { width, height } = this.options\r\n                // move 到边\r\n                if (coordinate.x <= 2 || coordinate.y <= 2 || coordinate.x >= width - 2 || coordinate.y >= height - 2) return\r\n                return coordinate\r\n            },\r\n            // https://blog.csdn.net/qq_42014697/article/details/80728463  两指缩放\r\n            handleStart(e) {\r\n                e.preventDefault()\r\n                if (e.touches.length > 1) {\r\n                    this.startTouches = e.touches\r\n                    this.startPoint.type = null\r\n                    return;\r\n                }\r\n                this.startPoint = this.getPointByCoordinate(this.getCoordinateByEvent(e))\r\n            },\r\n            handleMove (e) {\r\n                e.preventDefault()\r\n                const touches = e.touches\r\n                if (touches.length > 1) {\r\n                    const image = this.image\r\n                    let startTouches = this.startTouches\r\n                    let k; // 最终的缩放系数\r\n                    const scale = this.scale;\r\n                    // const offset = e.deltaY / 800;\r\n                    k = (this.getDistance(touches[0], touches[1]) / this.getDistance(startTouches[0], startTouches[1]))\r\n                    // k = k < 1 ? k / 10 : k * 10\r\n                    k = k < 1 ? 1 / (1 + k / 80) : 1 + Math.abs(k) / 160\r\n                    k = k * scale;\r\n                    this.scale = this.limit(k, 0.02, 4)\r\n                    const width = image.clientWidth * this.scale,\r\n                    height = image.clientHeight * this.scale\r\n                    this.image.x += (image.width - width) / 2\r\n                    this.image.y += (image.height - height) / 2\r\n                    this.image.width = width\r\n                    this.image.height = height\r\n                    this.draw()\r\n                    return\r\n                }\r\n                const type = this.startPoint.type\r\n                if (type && this.getCoordinateByEvent(e)) {\r\n                    this[type](this.getCoordinateByEvent(e))\r\n                }\r\n            },\r\n            checkRegion(x,y,target) {\r\n                return x > target.x &&\r\n                    x < target.x + target.width &&\r\n                    y > target.y &&\r\n                    y < target.y + target.height\r\n            },\r\n            checkArc(x, y) {\r\n                const ctx  = this.ctx\r\n                ctx.beginPath()\r\n                // ctx.strokeStyle = 'red'//'transparent'\r\n                ctx.lineWidth = this.nookSide / 0.7\r\n                ctx.arc(this.arc.x, this.arc.y, this.arc.r + ctx.lineWidth , 0, Math.PI * 2)\r\n                // ctx.stroke() \r\n                return (ctx.isPointInPath(x * this.pixelRatio, y * this.pixelRatio)\r\n                 && this.getDistance({pageX: x, pageY: y}, {pageX: this.arc.x, pageY: this.arc.y}) >  this.arc.r - ctx.lineWidth / 2)\r\n            },\r\n            getPointByCoordinate({x, y}) {\r\n                const image = this.image,\r\n                touchBar = this.touchBar\r\n                let t = {}\r\n                let index = 0\r\n                if (this.checkRegion(x,y,touchBar)) {\r\n                    this.rotateAngle =  (this.rotateAngle + this.angle ) % 360\r\n                    this.draw()\r\n                    return\r\n                }\r\n                // 圆移动\r\n                else if (this.shape === 'arc' && this.checkArc(x, y)) {\r\n                    t.type = 'handleArcMove'\r\n                }\r\n                // 四个角移动         \r\n                else if (this.shape !== 'arc' && this.points.some((point,i) => {\r\n                    index = i\r\n                    return this.checkRegion(x,y,point)\r\n                })\r\n                ) {\r\n                    t.type = 'handlePointMove'\r\n                    this.index = index\r\n                }\r\n                // 四根线移动\r\n                else if (this.shape !== 'arc' && this.lines.some((line,i) => {\r\n                    index = i\r\n                    return this.checkRegion(x,y,line)\r\n                }) \r\n                ) {\r\n                    t.type = 'handleLineMove'\r\n                    this.index = index\r\n                }\r\n                // else if (\r\n                // cropper &&\r\n                // x > cropper.x &&\r\n                // x < cropper.x + cropper.width &&\r\n                // y > cropper.y &&\r\n                // y < cropper.y + cropper.height\r\n                // ) {\r\n                // t.offsetX = x - cropper.x;\r\n                // t.offsetY = y - cropper.y;\r\n                // t.type = 'handleCropperMove'\r\n                // }\r\n                // 图片移动\r\n                else if (this.checkRegion(x,y,image)) {\r\n                    t.offsetX = x - image.x\r\n                    t.offsetY = y - image.y\r\n                    t.type = 'handleImageMove'\r\n                }\r\n                return t\r\n            },\r\n            getDistance(p1, p2) {\r\n                const x = p2.pageX - p1.pageX,\r\n                    y = p2.pageY - p1.pageY\r\n                return Math.sqrt((x * x) + (y * y))\r\n            },\r\n            limit(value, min, max) {\r\n                if (value < min) {\r\n                    return min\r\n                }\r\n                if (value > max) {\r\n                    return max\r\n                }\r\n                return value\r\n            },\r\n            getImage(type='Base64', mimeType='image/jpeg', quality=1) {\r\n                if (this.noImage) return\r\n                const image = this.image,\r\n                // cropper = this.cropper,\r\n                cropper = this.shape === 'arc' ? {\r\n                    x: this.arc.x - this.arc.r,\r\n                    y: this.arc.y - this.arc.r,\r\n                    width:  this.arc.r * 2 ,\r\n                    height:  this.arc.r * 2\r\n                } : this.cropper,\r\n                pixelRatio = this.pixelRatio,\r\n                types = {\r\n                    Base64(canvas, mimeType) {\r\n                        return new Promise((resolve) => {\r\n                            resolve(canvas.toDataURL(mimeType))\r\n                        })\r\n                    },\r\n                    Blob(canvas, mimeType){\r\n                        return new Promise((resolve) => {\r\n                            canvas.toBlob((blob)=> {\r\n                                resolve(blob)\r\n                            }, mimeType)\r\n                        })\r\n                    } \r\n                },\r\n                w = cropper.width * quality ,\r\n                h = cropper.height * quality \r\n                // 变量申请\r\n                if (!this.canvas) {\r\n                    this.canvas = document.createElement('canvas')\r\n                    this.cCtx = this.canvas.getContext('2d')\r\n                    // const { mountNode } = this.$refs\r\n                    // mountNode.appendChild(this.canvas)\r\n                }\r\n                const cCtx = this.cCtx\r\n                this.canvas.width = w * pixelRatio\r\n                this.canvas.height = h * pixelRatio\r\n                cCtx.scale(pixelRatio, pixelRatio)\r\n                cCtx.clearRect(0, 0, w, h)\r\n                const rotateAngle = this.rotateAngle\r\n                if (this.shape === 'arc') {\r\n                    const radius = cropper.width\r\n                    cCtx.beginPath()\r\n                    cCtx.lineWidth = 10\r\n                    cCtx.arc(radius, radius, radius, 0, Math.PI * 2, false)\r\n                    cCtx.clip()\r\n                }\r\n                this.canvasRotate('img', cCtx, image.element,\r\n                    rotateAngle,\r\n                    (image.x - cropper.x)  * quality,\r\n                    (image.y - cropper.y)  * quality,\r\n                    image.width* quality,\r\n                    image.height* quality\r\n                )\r\n                // -------------\r\n                // cCtx.drawImage(\r\n                //     image.element,\r\n                //     (image.x - cropper.x)  * quality , //  是负数\r\n                //     (image.y - cropper.y)  * quality, // 负数\r\n                //     image.width * quality ,\r\n                //     image.height * quality\r\n                // )\r\n                return new Promise((resolve, reject) => {\r\n                    if(!types[type]) {\r\n                        reject('type = Blob || Base64')\r\n                        return  \r\n                    }\r\n                    const [left = '50%', top = '50%', size = 1, angle = 0] = this.position\r\n                    // angle = this.angle || 0\r\n                    if (this.imageWatermark) {\r\n                        let watermarkImg = new Image()\r\n                        watermarkImg.src = this.getFileSrc(this.imageWatermark)\r\n                        watermarkImg.crossOrigin = 'anonymous'\r\n                        watermarkImg.onload = () => { // 等到图片加载进来之后\r\n                            const width = watermarkImg.width * size * quality,\r\n                            height = watermarkImg.height * size * quality,\r\n                            imgX  = ( w - width ) * parseInt(left) / 100 ,\r\n                            imgY =  (h - height) * parseInt(top) / 100\r\n                            this.canvasRotate('img', cCtx, watermarkImg, angle, imgX, imgY, width, height)\r\n                            resolve(types[type](this.canvas, mimeType))\r\n                        }\r\n                        return\r\n                    }             \r\n                    if (this.textWatermark) {\r\n                        const height = this.limit(12 * size, 12, 100)\r\n                        cCtx.font = height + 'px Georgia'\r\n                        const text = this.textWatermark,\r\n                        width = cCtx.measureText(text).width,\r\n                        textX = (w - width * 1.031 )  * parseInt(left) / 100,\r\n                        textY = (h - height * 2.82)  * parseInt(top) / 100\r\n                        // 变量申请\r\n                        cCtx.fillStyle = this.color || this.averageColor\r\n                        // console.log(this.cCtx.fillStyle)\r\n                        if(cCtx.fillStyle === '#ffffff') {\r\n                            cCtx.fillStyle = '#000'\r\n                        }\r\n                        this.canvasRotate('text', cCtx, text, angle, textX, textY, width, height)\r\n                        resolve(types[type](this.canvas, mimeType))\r\n                        return\r\n                    }\r\n                    resolve(types[type](this.canvas, mimeType))\r\n                })\r\n            },\r\n            canvasRotate(type, ctx, target, angle, x, y, width,height) {\r\n                ctx.save()\r\n                const halfHeight = height / 2,\r\n                halfWidth = width / 2\r\n                ctx.translate(x + halfWidth, y + halfHeight)\r\n                ctx.rotate(Math.PI / 180 * angle)\r\n                if (type === 'img') {\r\n                    ctx.drawImage(\r\n                        target,\r\n                        -halfWidth,\r\n                        -halfHeight,\r\n                        width,\r\n                        height\r\n                    )\r\n                } else {\r\n                    ctx.fillText(target, -halfWidth , -halfHeight)\r\n                }\r\n                ctx.restore()\r\n            },\r\n            changeImage(imgAddress) {\r\n                if (this.noImage) return\r\n                this.averageColor = null\r\n                if (imgAddress) {\r\n                    this.createImage(imgAddress)\r\n                    return\r\n                }\r\n                this.inputHandle()\r\n            },\r\n            // 工具\r\n            getPixelRatio(context) {\r\n                const backingStore = context.backingStorePixelRatio ||\r\n                context.webkitBackingStorePixelRatio ||\r\n                context.mozBackingStorePixelRatio ||\r\n                context.msBackingStorePixelRatio ||\r\n                context.oBackingStorePixelRatio ||\r\n                context.backingStorePixelRatio || 1\r\n                return (window.devicePixelRatio || 1) / backingStore\r\n            },\r\n            uploadImg(e) {\r\n                this.createImage(e.target.files[0])\r\n                this.noImage = false\r\n            },\r\n            getFileSrc(src) {\r\n                if (Object.prototype.toString.call(src) === '[object File]') {\r\n                   src = window.URL.createObjectURL(src)\r\n                }\r\n                return src\r\n            },\r\n            createImage(imgfile) {\r\n                let img = new Image()\r\n                //  url , imgsrc, 文件  三种情况\r\n                img.crossOrigin = 'anonymous'\r\n                img.src = this.getFileSrc(imgfile)\r\n                img.onload = () => { // 等到图片加载进来之后\r\n                    this.animation(img)\r\n                }\r\n            },\r\n            inputHandle() {\r\n                document.getElementById('file-input').click()\r\n            },\r\n            getImageColor(data) { \r\n                let r=0, g=0, b=0\r\n                // 取所有像素的平均值\r\n                const num = 50\r\n                for (var row = 0; row < num; row++) {\r\n                    for (var col = 0; col < num; col++) {\r\n                        r += data[((num * row) + col) * 4];\r\n                        g += data[((num * row) + col) * 4 + 1];\r\n                        b += data[((num * row) + col) * 4 + 2];\r\n                    }\r\n                }\r\n                // 求取平均值\r\n                r /= (num * num);\r\n                g /= (num * num);\r\n                b /= (num * num);\r\n                // 将最终的值取整\r\n                r = Math.round(r);\r\n                g = Math.round(g);\r\n                b = Math.round(b);\r\n                return `rgba(${255 - r}, ${255 - g}, ${255 - b}, 1)`\r\n            }\r\n        },\r\n        mounted() {\r\n            // 解决 字体模糊\r\n            const { mountNode } = this.$refs\r\n            const { clientWidth, clientHeight } = mountNode\r\n            // p可以优化\r\n            this.options = {\r\n                width: clientWidth,\r\n                height: clientHeight\r\n            }\r\n            // canvas dom\r\n            let canvasDom =  document.createElement('canvas')\r\n            canvasDom.style.width =  clientWidth + 'px'\r\n            canvasDom.style.height = clientHeight + 'px'\r\n            mountNode.appendChild(canvasDom)\r\n            this.ctx = canvasDom.getContext('2d')\r\n            const pixelRatio = this.pixelRatio = this.getPixelRatio(this.ctx)\r\n            canvasDom.width = clientWidth * pixelRatio\r\n            canvasDom.height = clientHeight * pixelRatio\r\n            this.ctx.scale(pixelRatio, pixelRatio)\r\n            // console.log(this.$slots.initial[0].data.attrs.src)\r\n            if (this.defaultImgUrl || this.$slots.defaultImgUrl) {\r\n                const src = this.defaultImgUrl ? this.defaultImgUrl : this.$slots.defaultImgUrl[0].data.attrs.src\r\n                this.createImage(src)\r\n                this.noImage = false\r\n            }\r\n            this.$emit('input', {\r\n                getImage: this.getImage,\r\n                changeImage: this.changeImage\r\n            })           \r\n        }\r\n    }\r\n</script>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./cropblg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./cropblg.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cropblg.vue?vue&type=template&id=24d0d0de&\"\nimport script from \"./cropblg.vue?vue&type=script&lang=js&\"\nexport * from \"./cropblg.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\nimport crop from './cropblg.vue';\r\n\r\n// const components = [progresschart];\r\n\r\n// 定义 install 方法\r\nconst install = function (Vue) {\r\n    if (install.installed) return\r\n    install.installed = true\r\n    // 遍历并注册全局组件\r\n    // components.map(component => {\r\n        Vue.component(crop.name, crop)\r\n    // })\r\n}\r\n\r\n//  全局引用可自动安装\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n    install(window.Vue);\r\n}\r\nexport default {\r\n    install,\r\n    crop\r\n};\r\nexport { crop };","import Vue from 'vue'\r\nimport App from './App.vue'\r\n// import crop from '../lib/vue-cropblg.umd'\r\nimport crop from '../packages/index'\r\n\r\nVue.use(crop)\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(App),\r\n}).$mount('#app')\r\n"],"sourceRoot":""}